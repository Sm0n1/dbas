CREATE TABLE User(
    user_id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username        VARCHAR(255) NOT NULL
);

CREATE TABLE Friendship(
    user_id_a       INT, -- PRIMARY KEY
    user_id_b       INT, -- PRIMARY KEY

    PRIMARY KEY (user_id_a, user_id_b),

    FOREIGN KEY (user_id_a) REFERENCES User(user_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id_b) REFERENCES User(user_id) ON DELETE CASCADE
);

CREATE TABLE Post(
    post_id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         INT NOT NULL,
    title           VARCHAR(255),
    place           VARCHAR(255),
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,

    FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE
);

CREATE TABLE TextPost(
    post_id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    contents        TEXT NOT NULL,

    FOREIGN KEY (post_id) REFERENCES Post(post_id) ON DELETE CASCADE
);

CREATE TABLE ImagePost(
    post_id         INT PRIMARY KEY,
    image_url       VARCHAR(255) NOT NULL,
    image_filter    VARCHAR(255),

    FOREIGN KEY (post_id) REFERENCES Post(post_id) ON DELETE CASCADE
);

CREATE TABLE VideoPost(
    post_id         INT PRIMARY KEY,
    video_url       VARCHAR(255) NOT NULL,
    codec           VARCHAR(255) NOT NULL,

    FOREIGN KEY (post_id) REFERENCES Post(post_id) ON DELETE CASCADE
);

CREATE TABLE Like(
    post_id         INT, -- PRIMARY KEY
    user_id         INT, -- PRIMARY KEY
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,

    PRIMARY KEY (post_id, user_id),

    FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE,
    FOREIGN KEY (post_id) REFERENCES Post(post_id) ON DELETE CASCADE
);

CREATE TABLE Tag(
    tag_id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tag_name        VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE PostTag(
    post_id         INT, -- PRIMARY KEY
    tag_id          INT, -- PRIMARY KEY

    PRIMARY KEY (post_id, tag_id),

    FOREIGN KEY (post_id) REFERENCES Post(post_id) ON DELETE CASCADE,
    FOREIGN KEY (tag_id)  REFERENCES Tag(tag_id)   ON DELETE CASCADE
);

CREATE TABLE Activity(
    activity_id     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         INT NOT NULL,
    title           VARCHAR(255) NOT NULL,
    place           VARCHAR(255) NOT NULL,
    start_day       DATE NOT NULL,
    end_day         DATE NOT NULL,

    FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE
);

CREATE TABLE Attendee(
    activity_id     INT, -- PRIMARY KEY
    user_id         INT, -- PRIMARY KEY

    PRIMARY KEY (activity_id, user_id),

    FOREIGN KEY (activity_id) REFERENCES Activity(activity_id) ON DELETE CASCADE
);

CREATE TABLE Subscription(
    subscription_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         INT NOT NULL,
    payment_date    DATE NOT NULL,
    payment_method  VARCHAR(255),

    FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE
);